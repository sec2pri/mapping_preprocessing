name: Convert SSSOM to RDF

on:
  push:        # Run on any push
  #pull_request: # Also run on PRs
  workflow_dispatch: # Allow manual trigger

jobs:
  validate-sssom:
    name: Validate SSSOM Files
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install sssom
        run: pip install sssom

      - name: Validate all SSSOM mapping files
        run: |
          echo "Converting all *_mapping.sssom.tsv[.zip] files under datasources/ to RDF"
          find datasources -type f -path '*/mappings/*_mapping.sssom.tsv*' | while read file; do
           if [[ "$file" == *.zip ]]; then
             echo "Processing ZIP archive: $file"
             temp_dir=$(mktemp -d)
             unzip -q "$file" -d "$temp_dir"
             inner_tsv=$(find "$temp_dir" -type f -name '*_mapping.sssom.tsv' | head -n 1)
             if [[ -n "$inner_tsv" ]]; then
               ttl_file="${file%.zip}.ttl"
               echo "Converting $inner_tsv (from zip) to $ttl_file"
               sssom convert "$inner_tsv" -o "$ttl_file" --output-format ttl
            else
               echo "No *_mapping.sssom.tsv found inside $file"
            fi
            rm -rf "$temp_dir"
          else
           ttl_file="${file%.tsv}.ttl"
           echo "Converting $file to $ttl_file"
           sssom convert "$file" -o "$ttl_file" --output-format ttl
           fi
          done

  convert-to-rdf:
    name: Convert SSSOM to RDF
    runs-on: ubuntu-latest
    needs: validate-sssom

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install sssom
        run: pip install sssom

      - name: Convert SSSOM files to RDF (Turtle)
        run: |
          echo "Converting all *_mapping.sssom.tsv files under mappings/ to RDF"
          find datasources -type f -path '*/mappings/*_mapping.sssom.tsv' | while read file; do
            ttl_file="${file%.tsv}.ttl"
            echo "Converting $file to $ttl_file"
            sssom convert "$file" -o "$ttl_file" --output-format ttl
          done

      - name: Upload RDF files for next job
        uses: actions/upload-artifact@v4
        with:
          name: intermediate_rdf
          path: datasources/**/mappings/*.ttl

  validate-rdf:
    name: Validate RDF Output
    runs-on: ubuntu-latest
    needs: convert-to-rdf

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download RDF files from previous job
        uses: actions/download-artifact@v4
        with:
          name: intermediate_rdf
          path: datasources/**/mappings/*.ttl

      - name: Install turtle-validator
        run: npm install -g turtle-validator

      - name: Validate RDF Turtle files
        run: |
          echo "Validating all Turtle files under mappings/"
          find mappings -type f -path '*.ttl' | while read ttl_file; do
            echo "Validating $ttl_file"
            turtle-validator "$ttl_file"
          done

  upload-artifacts:
    name: Upload RDF Artifacts
    runs-on: ubuntu-latest
    needs: validate-rdf

    steps:
      - name: Download RDF files
        uses: actions/download-artifact@v4
        with:
          name: intermediate_rdf
          path: mappings

      - name: Upload RDF Turtle files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: all_sssom_rdf
          path: mappings/**/*.ttl
